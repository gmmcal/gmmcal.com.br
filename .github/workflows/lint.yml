name: Lint

on:
  - pull_request

jobs:
  rubocop:
    name: 'Lint: Rubocop'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run rubocop
        run: bundle exec rubocop --config .rubocop.yml .

  reek:
    name: 'Lint: Reek'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run reek
        run: bundle exec reek --config .reek.yml .

  brakeman:
    name: 'Lint: Brakeman'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run brakeman
        run: bundle exec brakeman

  bundler-audit:
    name: 'Lint: Bundler Audit'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    steps:
      - uses: actions/checkout@v1

      - name: Install Bundler Audit
        run: gem install bundler-audit

      - name: Update advisory database
        run: bundler-audit update

      - name: Run bundler-audit
        run: bundler-audit

  scsslint:
    name: 'Lint: SCSSLint'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run SCSSLint
        run: bundle exec scss-lint --config .scss-lint.yml

  eslint:
    name: 'Lint: ESLint'
    runs-on: ubuntu-20.04

    container:
      image: node:18

    steps:
      - uses: actions/checkout@v1

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-gmmcal-${{ hashFiles('/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-gmmcal-

      - name: Run yarn install
        run: yarn install

      - name: Run ESLint
        run: yarn eslint --config=.eslintrc.js app/javascript/**/**.js
