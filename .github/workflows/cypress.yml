name: End-to-end Tests

on:
  - pull_request

env:
  RAILS_ENV: development
  RUBY_VERSION: '2.7.0'
  NODE_VERSION: '12.x'

jobs:
  admin:
    name: 'E2E: Admin'
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gmmcalcombr_development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      # languages
      - name: Set up RVM
        run: curl -sSL https://get.rvm.io | bash

      - name: Install Ruby ${{ env.RUBY_VERSION }}
        run: |
          source $HOME/.rvm/scripts/rvm
          rvm install ${{ env.RUBY_VERSION }} --binary
          rvm --default use ${{ env.RUBY_VERSION }}

      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install APT dependencies
        run: sudo apt-get -yqq install libpq-dev

      # caching
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundler-e2e-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            bundler-e2e-${{ env.cache-name }}-
            bundler-e2e-

      - name: Get yarn cache
        id: yarn-cache
        run: echo '::set-output name=dir::$(yarn cache dir)'

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-e2e-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-e2e-${{ env.cache-name }}-
            yarn-e2e-

      # dependencies
      - name: Install Bundler gem
        run: gem install bundler

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle config set without lint test production
          bundle install --jobs 4 --retry 3 --deployment

      - name: Run yarn install
        run: yarn install

      - name: Setup database
        run: bundle exec rails db:migrate

      - name: Compile assets
        run: bundle exec rails assets:precompile

      - name: Load default DB data
        run: bundle exec rails db:seed

      # script
      - name: Run tests
        uses: cypress-io/github-action@v1
        with:
          start: yarn server:start
          wait-on: 'http://localhost:3000'
          install: false
          spec: spec/end-to-end/tests/admin/**.js

  frontend:
    name: 'E2E: Frontend'
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gmmcalcombr_development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      # languages
      - name: Set up RVM
        run: curl -sSL https://get.rvm.io | bash

      - name: Install Ruby ${{ env.RUBY_VERSION }}
        run: |
          source $HOME/.rvm/scripts/rvm
          rvm install ${{ env.RUBY_VERSION }} --binary
          rvm --default use ${{ env.RUBY_VERSION }}

      - name: Install Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install APT dependencies
        run: sudo apt-get -yqq install libpq-dev

      # caching
      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundler-e2e-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            bundler-e2e-${{ env.cache-name }}-
            bundler-e2e-

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: yarn-e2e-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-e2e-${{ env.cache-name }}-
            yarn-e2e-

      # dependencies
      - name: Install Bundler gem
        run: gem install bundler

      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle config set without lint test production
          bundle install --jobs 4 --retry 3 --deployment

      - name: Run yarn install
        run: yarn install

      - name: Setup database
        run: bundle exec rails db:migrate

      - name: Compile assets
        run: bundle exec rails assets:precompile

      - name: Load default DB data
        run: bundle exec rails db:seed

      # script
      - name: Run tests
        uses: cypress-io/github-action@v1
        with:
          start: yarn server:start
          wait-on: 'http://localhost:3000'
          install: false
          spec: spec/end-to-end/tests/frontend/**.js
