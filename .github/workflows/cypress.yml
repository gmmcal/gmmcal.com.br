name: End-to-end Tests

on:
  - pull_request

env:
  RAILS_ENV: development
  DATABASE_URL: postgres://postgres:postgres@postgres:5432/gmmcalcombr_development

jobs:
  admin:
    name: 'E2E: Admin'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gmmcalcombr_development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      # languages
      - name: Install APT dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | bash -
          curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
          apt-get -yqq install nodejs libpq-dev xvfb libgtk-3-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

      - name: Install yarn
        run: npm i -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-gmmcal-${{ hashFiles('/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-gmmcal-

      # dependencies
      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run yarn install
        run: yarn install

      - name: Setup database
        run: |
          bundle exec rails db:migrate

      - name: Compile assets
        run: |
          bundle exec rails assets:precompile

      - name: Load default DB data
        run: |
          bundle exec rails db:seed

      # script
      - name: Run tests
        uses: cypress-io/github-action@v2
        with:
          start: yarn server:start
          wait-on: 'http://localhost:3000'
          install: false
          spec: spec/end-to-end/tests/admin/**.js

  frontend:
    name: 'E2E: Frontend'
    runs-on: ubuntu-20.04

    container:
      image: ruby:3.0.0

    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gmmcalcombr_development
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1

      - name: Install APT dependencies
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | bash -
          curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
          apt-get -yqq install nodejs libpq-dev xvfb libgtk-3-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2

      - name: Install yarn
        run: npm i -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-gmmcal-${{ hashFiles('/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-gmmcal-

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-gmmcal-${{ hashFiles('/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-gmmcal-

      # dependencies
      - name: Run bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run yarn install
        run: yarn install

      - name: Setup database
        run: |
          bundle exec rails db:migrate

      - name: Compile assets
        run: |
          bundle exec rails assets:precompile

      - name: Load default DB data
        run: |
          bundle exec rails db:seed

      # script
      - name: Run tests
        uses: cypress-io/github-action@v2
        with:
          start: yarn server:start
          wait-on: 'http://localhost:3000'
          install: false
          spec: spec/end-to-end/tests/frontend/**.js
