language: ruby

cache:
  directories:
    - /home/travis/.rvm
    - /home/travis/.npm
    - /home/travis/.cache

common: &common
  before_install:
    - gem update --system

  before_script:
    - cp config/database.yml.travis config/database.yml
    - cp config/secrets.yml.travis config/secrets.yml
    - psql -c 'create database travis_ci_test;' -U postgres
    - bundle exec rails db:migrate

  install:
    - bundle install
    - nvm install node
    - npm i -g yarn
    - yarn install

tests: &tests
  <<: *common
  before_install:
    - gem update --system
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build

  script:
    - bundle exec rspec
    - yarn test:once

  after_script:
    - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/backend/.resultset.json
    - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.frontend.json coverage/frontend/lcov.info
    - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p 2
    - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi

jobs:
  include:
    - stage: unit tests
      rvm: 2.3.7
      <<: *tests

    - stage: unit tests
      rvm: 2.4.4
      <<: *tests

    - stage: unit tests
      rvm: 2.5.3
      <<: *tests

    - stage: unit tests
      rvm: 2.6.1
      <<: *tests

    - stage: end-to-end tests
      rvm: 2.6.1

      <<: *common

      script:
        - bin/webpack
        - bundle exec rails db:seed
        - bundle exec rails server -p 3000 &
        - yarn cypress:ci
        - kill $(jobs -p) || true

    - stage: deploy
      script: skip
      deploy: &heroku
        provider: heroku
        app: gmmcal-dev
        api_key: $HEROKU_AUTH_TOKEN
        run:
          - "rails db:migrate"
          - "rails db:seed:all"
          - "rails db:cache:clear"
        on:
          branch: master

    - stage: deploy
      script: skip
      deploy: &heroku
        provider: heroku
        app: gmmcal
        api_key: $HEROKU_AUTH_TOKEN
        run:
          - "rails db:migrate"
          - "rails db:cache:clear"
        on:
          all_branches: true
          tags: true

bundler_args: --without production
